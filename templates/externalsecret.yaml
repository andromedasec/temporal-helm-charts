---
apiVersion: external-secrets.io/v1beta1
kind:   ExternalSecret
metadata:
  name: {{ template "temporal.name" . }}-externalsecret
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"

spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-{{ include "env.name" . }}-cluster-secret-store
    kind: ClusterSecretStore
  target:
    name: {{ template "temporal.name" . }}-visibility-stores
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # password: "{{ .mysecret }}"               # If you are using plain manifests or gitops tools
        password: "{{ `{{ .temporal_sql_password }}` }}"          # If you are using helm


  ## Or you can get specific fields
  data:
  - secretKey: temporal_sql_password # Name of the field to store inside the k8s secret
    remoteRef:
      key: {{ include "env.name" . }}/{{ include "parent-chart.name" . }} # Our AWS SecretsManager secret-name goes here
      property: temporal_sql_password   # Retrieve the password field

---
apiVersion: external-secrets.io/v1beta1
kind:   ExternalSecret
metadata:
  name: {{ template "temporal.name" . }}-externalsecret-default
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"

spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-{{ include "env.name" . }}-cluster-secret-store
    kind: ClusterSecretStore
  target:
    name: {{ template "temporal.name" . }}-default-store
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # password: "{{ .mysecret }}"               # If you are using plain manifests or gitops tools
        password: "{{ `{{ .temporal_sql_password }}` }}"          # If you are using helm


  ## Or you can get specific fields
  data:
  - secretKey: temporal_sql_password # Name of the field to store inside the k8s secret
    remoteRef:
      key: {{ include "env.name" . }}/{{ include "parent-chart.name" . }} # Our AWS SecretsManager secret-name goes here
      property: temporal_sql_password   # Retrieve the password field
